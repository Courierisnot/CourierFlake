version: 3
silent: true
tasks:
  default:
    cmds:
      - task: env
  env:
    cmds:
      - direnv reload
      - nix-direnv-reload
  switch:
    cmds:
      - |
        sudo nixos-rebuild switch --show-trace --flake .#{{.CLI_ARGS}} \
        --log-format internal-json -v |& nom --json
  switch-remote:
    aliases:
      - sr
    cmds:
      - |
        cliArgs=({{.CLI_ARGS}})
        nixos-rebuild switch --show-trace \
        --flake ".#${cliArgs[0]}" \
        --target-host "root@${cliArgs[1]}" \
        --build-host "$USER"@localhost \
        --log-format internal-json -v |& nom --json
  boot:
    cmds:
      - |
        sudo nixos-rebuild boot --show-trace --flake .#{{.CLI_ARGS}} \
        --log-format internal-json -v |& nom --json
  boot-remote:
    aliases:
      - br
    cmds:
      - |
        cliArgs=({{.CLI_ARGS}})
        nixos-rebuild boot --show-trace \
        --flake ".#${cliArgs[0]}" \
        --target-host "root@${cliArgs[1]}" \
        --build-host "$USER"@localhost \
        --log-format internal-json -v |& nom --json && \
        ssh "root@${cliArgs[1]}" "systemctl reboot"
  test:
    cmds:
      # task: update-util
      # rm ./temp.log || true
      # ./scripts/flake-util sops update-all-keys -l temp.log || true
      # bat ./temp.log || true
      - |
        cliArgs=({{.CLI_ARGS}})
        nix build --dry-run --show-trace --option eval-cache false \
        ".#nixosConfigurations.${cliArgs[0]}.config.system.build.toplevel"
  sb-createKeys:
    cmds:
      - sudo nix shell nixpkgs#sbctl -c sbctl create-keys
  sb-enroll:
    cmds:
      - sudo nix shell nixpkgs#sbctl -c sbctl enroll-keys --microsoft
      - sudo bootctl status
      - echo "A rebuild switch is needed to sign the config for boot."
      - echo "task sb-verify to check signatures."
  sb-verify:
    cmds:
      - sudo nix shell nixpkgs#sbctl -c sbctl verify
  crypt-changeKey:
    cmds:
      - |
        sudo cryptsetup luksChangeKey \
        $(blkid | awk '/crypt/ {print $1}' | sed 's/://') -S 0
  crypt-enroll:
    cmds:
      - |
        sudo systemd-cryptenroll --tpm2-device=auto --tpm2-pcrs=0+7 \
        $(blkid | awk '/crypt/ {print $1}' | sed 's/://')
  mk-keys:
    cmds:
      - mkfifo key && ( (cat key ; rm key)&) && (echo y | ssh-keygen -N "" -q -f key > /dev/null)
      - nix shell nixpkgs#ssh-to-age -c ssh-to-age -i key.pub -o age.pub
  mk-sops-key:
    cmds:
      - mkdir -p ~/.config/sops/age
      - chmod 0700 ~/.config/sops
      - touch ~/.config/sops/age/keys.txt
      - chmod 0600 ~/.config/sops/age/keys.txt
      - |
        nix shell nixpkgs#ssh-to-age -c ssh-to-age \
        -i ~/.ssh/id_ed25519 \
        -o ~/.config/sops/age/keys.txt \
        --private-key
  vma:
    cmds:
      - |
        cliArgs=({{.CLI_ARGS}})
        rm vma-build.log || true
        flake-util deploy vma "${cliArgs[0]}" -l vma-build.log
  repl:
    cmds:
      - nixos-rebuild repl --flake . --show-trace
  util:
    dir: "./"
    cmds:
      - flake-util interactive
    deps:
      - update-util
  update-util:
    aliases:
      - uu
    dir: "./scripts/"
    cmds:
      - bashly generate
  test-util:
    interactive: true
    aliases:
      - tu
    dir: "./"
    cmds:
      - ./scripts/test/approve
    deps:
      - update-util
